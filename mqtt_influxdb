import json
import paho.mqtt.client as mqtt
from influxdb_client import InfluxDBClient, Point, WritePrecision
from influxdb_client.client.write_api import SYNCHRONOUS

# Replace with your InfluxDB instance details
url = "http://localhost:8086"
token = "2VSc4axpawCfDdkdxZF4KCX3dcaVWE_Zu_opzZaLJ2jVscxhJQT_w2sc04Tl3agfzQgTQ=="
org = "Test"
bucket = "First_data"

client = InfluxDBClient(url=url, token=token, org=org)

# Write data to InfluxDB
write_api = client.write_api(write_options=SYNCHRONOUS)

# MQTT settings
mqtt_broker = "test..........com"
mqtt_port = 1883
mqtt_topic = "test/aws/555555"
mqtt_username = "aws"
mqtt_password = "aws@1234"

# Define the MQTT callback functions
def on_connect(client, userdata, flags, rc):
    print("Connected to MQTT Broker with result code " + str(rc))
    client.subscribe(mqtt_topic)

def on_message(client, userdata, msg):
    try:
        data = json.loads(msg.payload.decode())
        print(f"Received message: {data}")

        point = (
            Point("device_data")
            .tag("device_id", data["device_id"])
            .field("Voltage", data["Voltage"])
            .field("Power", data["Power"])
            .field("current", data["current"])
        )

        write_api.write(bucket=bucket, org=org, record=point)
        print("Data written to InfluxDB")

    except Exception as e:
        print(f"Error processing message: {e}")

# Setup MQTT client
mqtt_client = mqtt.Client()
mqtt_client.username_pw_set(mqtt_username, mqtt_password)
mqtt_client.on_connect = on_connect
mqtt_client.on_message = on_message

# Connect to MQTT broker
mqtt_client.connect(mqtt_broker, mqtt_port, 60)

# Start the MQTT loop
mqtt_client.loop_forever()
